# automatically generated by Gnu Web

CONFED = \
	-e 's|@prefix@|$(prefix)|g' \
	-e 's|@bindir@|$(bindir)|g' \
	-e 's|@libdir@|$(libdir)|g' \
	-e 's|@datadir@|$(datadir)|g' \
	-e 's|@sysconfdir@|$(sysconfdir)|g' \
	-e 's|@pkgdatadir@|$(pkgdatadir)|g' \
	-e 's|@pkglibdir@|$(pkglibdir)|g' \
	-e 's|@PACKAGE@|$(PACKAGE)|g' \
	-e 's|@VERSION@|$(VERSION)|g'

tarball: $(distdir)-bin.tgz

$(distdir)-bin.tgz:
	$(AM_V_TAR)rm -f -R /tmp/make/$(distdir)
	@$(MAKE) install DESTDIR=/tmp/make/$(distdir) > /dev/null
	@cd /tmp/make/$(distdir);tar --no-recursion -czvf $(distdir)-bin.tgz `find . -type f -print` > /dev/null
	@mv /tmp/make/$(distdir)/$(distdir)-bin.tgz $(top_builddir)
	@rm -f -R /tmp/make/$(distdir)

   

ifndef CONFED
CONFED =
endif

CONFED += \
   -e 's|@liberldir@|$(liberldir)|g' \
   -e 's|@pkgliberldir@|$(pkgliberldir)|g'

ifndef ERL_CFLAGS
   ERL_CFLAGS =
endif

ifeq ($(BUILD),native)
   ERL_CFLAGS += +native
endif

ifeq ($(BUILD),debug)
   ERL_CFLAGS += +debug_info -DDEBUG
endif


ebin/%.beam : src/%.erl
	$(AM_V_ERL)test -d ebin || mkdir ebin; $(ERLC) $(ERL_CFLAGS) -I ./include -b beam -o ebin $<

priv/%.beam : priv/%.erl
	$(AM_V_ERL)$(ERLC) $(ERL_CFLAGS) -I ./include -b beam -o priv $<

ebin/%.config : src/%.config.in
	$(AM_V_ERL)cat $^ | sed $(CONFED) > $@

ebin/%.rel: ebin/%.app
	$(AM_V_ERL)n=`echo $< | sed -n -e 's|ebin/\(.*\)\.app|\1|p'` ; \
	e="$(ERLANG_LIBS) $(ERLANG_APPS)" ; \
	for l in `cat $$n.mf | sed -n 's|deps: \(.*\)|\1|p'` ; do \
	erl -pa ../*/ebin -pa ./*/ebin -eval "{ok,[{_,_,L}]}=file:consult(code:lib_dir(\"$$l\") ++ \"/ebin/$$l.app\"), file:write_file(\"vsn.out\", list_to_binary(proplists:get_value(vsn, L, \"\"))), timer:apply_after(100, erlang, halt, [0])." > /dev/null ; \
	v=`cat vsn.out`; \
	e="$$e $$l-$$v"; \
	rm vsn.out ; \
	done ; \
	d=`echo "$$e" | sed 's| | -U |g'`; \
	$(CONF2LIB) -r erel -l $$n -o $@  -U $$d $(top_builddir)/config.h

ebin/%.boot: ebin/%.rel
	$(AM_V_ERL)$(ERLC) -pa ./ebin -pa ./*/ebin -o ebin $^

ebin/%.tar.gz: ebin/%.boot
	$(AM_V_ERL)n=`echo $< | sed -n -e 's|ebin/\(.*\).boot|"ebin/\1"|p'` ; 	$(ERL) -noshell -pa ./ebin -eval "systools:make_tar($$n, [{dirs, [src]}, {erts, code:root_dir()}]),halt(0)" > /dev/null ;

%.$(VERSION).tgz: ebin/%.tar.gz .force
	$(AM_V_ERL)n=`echo $< | sed -n -e 's|ebin/\(.*\).tar.gz|\1|p'` ; \
	mkdir -p /tmp/rel/bin ; \
	tar -C /tmp/rel -xf $< ; \
	cp $(top_builddir)/init.erlang /tmp/rel/bin/init ; \
	chmod ugo+x /tmp/rel/bin/init ; \
	cp ebin/sys.config /tmp/rel/releases/$(VERSION)/sys.config ; \
	tar -C /tmp/rel -czpf $@ `ls /tmp/rel` ; \
	rm -R /tmp/rel

debug:
	$(MAKE) BUILD=debug

run:
	$(ERL) -pa ./ebin -pa ../*/ebin -pa ./priv -pa ../*/priv

.force:

ifndef nobase_pkgliberl_SCRIPTS
nobase_pkgliberl_SCRIPTS =
endif

define rules_BEAM
$(1)_BEAM=$(subst .in,,$(addprefix ebin/, $(notdir $($(1)_SRC:.erl=.beam))))
nobase_pkgliberl_SCRIPTS += $($(1)_BEAM)

$(1): $$($(1)_BEAM)
endef


define rules_ERLAPP
$(1)_BEAM=$(subst .in,,$(addprefix ebin/, $(notdir $($(1)_SRC:.erl=.beam))))
nobase_pkgliberl_SCRIPTS += $($(1)_BEAM)

ebin/$(1).app: $$($(1)_BEAM)
	$(AM_V_ERL)m=`echo $$($(1)_SRC) | sed 's| | -I |g'`; \
	e="$$(ERLANG_APPS)"; \
	v=`test -f $(1).mf && cat $(1).mf | sed -n 's|version: \(.*\)|-v \1|p'` ; \
	for l in `test -f $(1).mf && cat $(1).mf | sed -n 's|depends: \(.*\)|\1|p'` ; do \
	e="$$$$e $$$$l"; \
	done ; \
	d=`echo "$$$$e" | sed 's| | -U |g'`; \
	$$(CONF2LIB)	-r eapp -l $(1) $$$$v -o $$@ -I $$$$m -U $$$$d $(top_builddir)/config.h

endef

$(foreach erlapp,                          \
   $(subst .app, ,$(notdir  \
      $(filter %.app, $(nobase_pkgliberl_SCRIPTS))  \
   )),   \
   $(eval                                  \
      $(call rules_ERLAPP,$(erlapp))      \
   )                                        \
)


$(foreach liberl,                          \
   $(pkgliberl_SCRIPTS),   \
   $(eval                                  \
      $(call rules_BEAM,$(liberl))      \
   )                                        \
)


   